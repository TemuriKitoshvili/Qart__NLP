[{"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\index.js":"1","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\reportWebVitals.js":"2","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\App.js":"3","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Header.js":"4","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Home.js":"5","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Terminal.js":"6","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Console.js":"7","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\AddProject.js":"8","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Dashboard.js":"9","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\axios.js":"10","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\Lemetize.js":"11","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\FreqDist.js":"12","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\Statistics.js":"13","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\SelectForm.js":"14","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Project.js":"15","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\SearchWord.js":"16","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\ModalBox.js":"17","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\noty.js":"18","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\LemetizeWord.js":"19","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\PopoverModule.js":"20","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\state\\stateProvider.js":"21","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\state\\reducer.js":"22","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\state\\actionTypes.js":"23","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\firebase.js":"24","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\ProtectedRoute.js":"25","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\hooks\\useLocalStorage.js":"26","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\AccordionModule.js":"27","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\ErrorPage.js":"28","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\helper\\Loading.js":"29"},{"size":757,"mtime":1612523490866,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1199,"mtime":1613479955188,"results":"33","hashOfConfig":"31"},{"size":3496,"mtime":1613738206425,"results":"34","hashOfConfig":"31"},{"size":993,"mtime":1613578793569,"results":"35","hashOfConfig":"31"},{"size":4429,"mtime":1613409924115,"results":"36","hashOfConfig":"31"},{"size":3400,"mtime":1613738081452,"results":"37","hashOfConfig":"31"},{"size":4596,"mtime":1613410407005,"results":"38","hashOfConfig":"31"},{"size":3577,"mtime":1613738080978,"results":"39","hashOfConfig":"31"},{"size":134,"mtime":1612611888345,"results":"40","hashOfConfig":"31"},{"size":1251,"mtime":1613569922050,"results":"41","hashOfConfig":"31"},{"size":1725,"mtime":1613394029187,"results":"42","hashOfConfig":"31"},{"size":817,"mtime":1611754511655,"results":"43","hashOfConfig":"31"},{"size":1172,"mtime":1613410520595,"results":"44","hashOfConfig":"31"},{"size":257,"mtime":1613141156361,"results":"45","hashOfConfig":"31"},{"size":660,"mtime":1613396967164,"results":"46","hashOfConfig":"31"},{"size":5633,"mtime":1613410656334,"results":"47","hashOfConfig":"31"},{"size":370,"mtime":1611150910663,"results":"48","hashOfConfig":"31"},{"size":652,"mtime":1613570559318,"results":"49","hashOfConfig":"31"},{"size":2042,"mtime":1613410540621,"results":"50","hashOfConfig":"31"},{"size":539,"mtime":1613410510485,"results":"51","hashOfConfig":"31"},{"size":494,"mtime":1613145121422,"results":"52","hashOfConfig":"31"},{"size":92,"mtime":1612100559695,"results":"53","hashOfConfig":"31"},{"size":580,"mtime":1612798204707,"results":"54","hashOfConfig":"31"},{"size":398,"mtime":1612798177644,"results":"55","hashOfConfig":"31"},{"size":483,"mtime":1612980504922,"results":"56","hashOfConfig":"31"},{"size":2113,"mtime":1613410669726,"results":"57","hashOfConfig":"31"},{"size":222,"mtime":1613479303127,"results":"58","hashOfConfig":"31"},{"size":608,"mtime":1613575522030,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1pmbvg3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\index.js",[],["127","128"],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\reportWebVitals.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\App.js",["129","130","131"],"import './scss/App.scss';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// configs\nimport ProtectedRoute from './components/configs/ProtectedRoute';\n// state\nimport { useStateValue } from './components/state/stateProvider';\n// components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Console from './components/Console';\nimport Dashboard from './components/Dashboard';\nimport ErrorPage from './components/ErrorPage';\n\nfunction App() {\n  const [{ user, projects }, dispatch] = useStateValue();\n\n  return (\n    <div className='app'>\n      <Router>\n        <Header />\n        <Switch>\n          {/* public routes */}\n          <Route exact path='/' component={Home} />\n\n          {/* protected routes */}\n          <ProtectedRoute\n            path='/dashboard/:id'\n            component={Dashboard}\n            isAuth={user}\n          />\n          <ProtectedRoute\n            exact\n            path='/dashboard'\n            component={Console}\n            isAuth={user}\n          />\n\n          {/* error page */}\n          <Route path='*' component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Header.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Home.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Terminal.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Console.js",["132","133"],"// import { useState } from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport '../scss/Console.scss';\r\n// configs\r\nimport axios from './configs/axios';\r\nimport noty from './configs/noty';\r\n// state\r\nimport { useStateValue } from './state/stateProvider';\r\n// Conponents\r\nimport Project from './Project';\r\n// Material UI\r\nimport AddProject from './AddProject';\r\nimport { actionTypes } from './state/actionTypes';\r\nimport { auth } from './configs/firebase';\r\nimport Loading from './helper/Loading';\r\n\r\nfunction Console() {\r\n  const [{ user, projects }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  console.log(user, projects);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    console.log('დარეფრეშდა', refresh);\r\n    if (user) {\r\n      auth.currentUser\r\n        ?.getIdToken()\r\n        .then((idToken) => {\r\n          return idToken;\r\n        })\r\n        .then((token) => {\r\n          return axios.get('/projects', {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n        })\r\n        .then((res) => {\r\n          dispatch({\r\n            type: actionTypes.SET_PROJECTS,\r\n            payload: {\r\n              projects: res.data,\r\n            },\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          dispatch({\r\n            type: actionTypes.SET_PROJECTS,\r\n            payload: {\r\n              projects: [],\r\n            },\r\n          });\r\n          setLoading(false);\r\n          noty('პროექტების ჩატვირთვისას დაფიქსირდა შეცდომა', 'error');\r\n          // სავააუდოდ ან სეთთაიმაუთი გავუწეროთ\r\n          history.push('/');\r\n        });\r\n    } else {\r\n      // ეს ალბათ უნდა ამოვშალო პროექტები ისედაც ცარიელი ერეია\r\n      dispatch({\r\n        type: actionTypes.SET_PROJECTS,\r\n        payload: {\r\n          projects: [],\r\n        },\r\n      });\r\n    }\r\n  }, [refresh, user]);\r\n\r\n  // useEffect(() => {\r\n  //   setLoading(false);\r\n  // }, []);\r\n\r\n  return (\r\n    <div className='console'>\r\n      {/* test */}\r\n      <div className='console__background'></div>\r\n\r\n      <div className='console__container'>\r\n        <div className='console__addProject'>\r\n          <div className='console__createProject'>\r\n            <AddProject refresh={refresh} setRefresh={setRefresh} />\r\n          </div>\r\n          <Link to='/'>\r\n            <h3>დემო პროექტი</h3>\r\n          </Link>\r\n        </div>\r\n\r\n        {projects?.length > 0 ? (\r\n          projects?.map((project) => (\r\n            <div key={project.id}>\r\n              <Link to={`/dashboard/${project.id}`}>\r\n                <Project\r\n                  key={project.id}\r\n                  data={project.data}\r\n                  createdAt={project.createdAt}\r\n                />\r\n              </Link>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <Loading open={loading} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Console;\r\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\AddProject.js",["134","135"],"import { useState } from 'react';\r\nimport '../scss/AddProject.scss';\r\n// configs\r\nimport axios from './configs/axios';\r\nimport noty from './configs/noty';\r\nimport { auth } from './configs/firebase';\r\n// state\r\nimport { useStateValue } from './state/stateProvider';\r\n// Components\r\nimport ModalBox from './Material-UI/ModalBox';\r\n// Material UI\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nfunction AddProject({ refresh, setRefresh }) {\r\n  const [{ user, projects }, dispatch] = useStateValue();\r\n  const [open, setOpen] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const [projectFile, setProjectFile] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log('შემოვიდა და რა შემოვიდსაააა');\r\n\r\n    if (user) {\r\n      const formData = new FormData();\r\n      formData.append('name', projectName);\r\n      formData.append('description', projectDescription);\r\n      formData.append('file', projectFile);\r\n\r\n      console.log(formData);\r\n\r\n      auth.currentUser\r\n        ?.getIdToken()\r\n        .then((idToken) => {\r\n          return idToken;\r\n        })\r\n        .then((token) => {\r\n          return axios.post(`/addProject`, formData, {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n        })\r\n        .then((res) =>\r\n          res.status === 201\r\n            ? noty(`პროექტი ' ${projectName} ' წარმატებით აიტვირთა`, 'info')\r\n            : noty('დაფიქსირდა შეცდომა', 'warning')\r\n        )\r\n        .catch((err) => noty('დაფიქსირდა შეცდომა', 'error'));\r\n    }\r\n\r\n    setRefresh(!refresh);\r\n    setOpen(false);\r\n    setActiveStep(0);\r\n    setProjectName('');\r\n    setProjectDescription('');\r\n    setProjectFile(null);\r\n  };\r\n\r\n  // const fileRef = storageRef\r\n  //   .ref(`${user}/${projectFile.name}`)\r\n  //   .put(projectFile);\r\n  // fileRef.on(\r\n  //   'state_changed',\r\n  //   (snapshot) => {},\r\n  //   (error) => console.log(error),\r\n  //   () => {}\r\n  // );\r\n\r\n  // const submitHandler = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(\"შემოვიდა და რა შემოვიდსაააა\");\r\n\r\n  //   if (user) {\r\n  //     const fileRef = storageRef\r\n  //       .ref(`${user}/${projectFile.name}`)\r\n  //       .put(projectFile);\r\n  //     fileRef.on(\r\n  //       \"state_changed\",\r\n  //       (snapshot) => {},\r\n  //       (error) => console.log(error),\r\n  //       () => {}\r\n  //     );\r\n\r\n  //     auth.currentUser\r\n  //       ?.getIdToken()\r\n  //       .then((idToken) => {\r\n  //         return idToken;\r\n  //       })\r\n  //       .then((token) => {\r\n  //         return axios.post(\r\n  //           `/addProject`,\r\n  //           {\r\n  //             projectName,\r\n  //             projectFile: projectFile.name,\r\n  //             projectDescription,\r\n  //           },\r\n  //           {\r\n  //             headers: {\r\n  //               authorization: `Bearer ${token}`,\r\n  //             },\r\n  //           }\r\n  //         );\r\n  //       })\r\n  //       .then((res) =>\r\n  //         res.status === 201\r\n  //           ? noty(`პროექტი ' ${projectName} ' წარმატებით აიტვირთა`, \"info\")\r\n  //           : noty(\"დაფიქსირდა შეცდომა\", \"warning\")\r\n  //       )\r\n  //       .catch((err) => noty(\"დაფიქსირდა შეცდომა\", \"error\"));\r\n\r\n  //     setOpen(false);\r\n  //     setActiveStep(0);\r\n  //     setProjectName(\"\");\r\n  //     setProjectFile(null);\r\n  //     setRefresh(!refresh);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <button type='button' onClick={() => setOpen(true)}>\r\n        <AddIcon />\r\n        <span>პროექტის დამატება</span>\r\n      </button>\r\n      <ModalBox\r\n        open={open}\r\n        setOpen={setOpen}\r\n        projectName={projectName}\r\n        setProjectName={setProjectName}\r\n        projectDescription={projectDescription}\r\n        setProjectDescription={setProjectDescription}\r\n        projectFile={projectFile}\r\n        setProjectFile={setProjectFile}\r\n        submitHandler={submitHandler}\r\n        activeStep={activeStep}\r\n        setActiveStep={setActiveStep}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddProject;\r\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Dashboard.js",["136","137","138"],"import { useEffect, useState } from 'react';\r\nimport '../scss/Dashboard.scss';\r\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\r\n// hooks\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n// configs\r\nimport axios from './configs/axios';\r\nimport noty from './configs/noty';\r\nimport { auth } from './configs/firebase';\r\n// state\r\nimport { useStateValue } from './state/stateProvider';\r\n// components\r\nimport Lemetize from './toolsComponents/Lemetize';\r\nimport FreqDist from './toolsComponents/FreqDist';\r\nimport SearchWord from './toolsComponents/SearchWord';\r\nimport Loading from './helper/Loading';\r\n// Material UI\r\nimport SelectForm from './Material-UI/SelectForm';\r\nimport AccordionModule from './Material-UI/AccordionModule';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nfunction Dashboard() {\r\n  const [{ user, projects }, dispatch] = useStateValue();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  // ? არ მინდა რო localstorage ში შეინახოს\r\n  const [data, setData] = useLocalStorage('projectData', []);\r\n  // const [data, setData] = useState([]);\r\n  const [tool, setTool] = useState('lematization');\r\n  // style states\r\n  const [toggleSidebar, setToggleSidebar] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fileUrl = projects?.filter((project) => project.id === id)[0]?.data\r\n      .projectFile;\r\n\r\n    if (user) {\r\n      auth.currentUser\r\n        ?.getIdToken()\r\n        .then((idToken) => {\r\n          return idToken;\r\n        })\r\n        .then((token) => {\r\n          return axios.get(`/processing?fileUrl=${fileUrl}`, {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n        })\r\n\r\n        .then((res) => {\r\n          setData(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          noty('პროექტის ჩატვირთვისას დაფიქსირდა შეცდომა', 'error');\r\n          history.push('/dashboard');\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  // for page refresh\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return !loading ? (\r\n    <div className='dashboard'>\r\n      <div\r\n        className={\r\n          toggleSidebar\r\n            ? 'dashboard__leftSidebar toggle'\r\n            : 'dashboard__leftSidebar'\r\n        }\r\n      >\r\n        <div className='project__lists'>\r\n          <SelectForm id={id} />\r\n        </div>\r\n\r\n        <div className='project__tools'>\r\n          <AccordionModule setTool={setTool} />\r\n        </div>\r\n\r\n        <div\r\n          className='dashboard__toggleButon'\r\n          onClick={() => setToggleSidebar(!toggleSidebar)}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='dashboard__mainContainer'>\r\n        {tool === 'lematization' && (\r\n          <Lemetize\r\n            lematization={data['lematization']}\r\n            statistics={data['statistics']}\r\n          />\r\n        )}\r\n        {tool === 'freqDist' && <FreqDist freqDist={data['freqDist']} />}\r\n        {tool === 'searchWord' && <SearchWord sentences={data['sentences']} />}\r\n\r\n        <div className='sidebar__toggleButton'>\r\n          <SettingsIcon onClick={() => setToggleSidebar(!toggleSidebar)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading open={loading} />\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\axios.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\Lemetize.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\FreqDist.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\Statistics.js",[],["139","140"],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\SelectForm.js",["141","142"],"import { Link } from 'react-router-dom';\r\n// state\r\nimport { useStateValue } from '../state/stateProvider';\r\n// Material UI\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SelectForm({ id }) {\r\n  const [{ user, projects }, dispatch] = useStateValue();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='demo-simple-select-label'>\r\n          {projects?.filter((project) => project.id === id)[0]?.data.name}\r\n        </InputLabel>\r\n        <Select labelId='demo-simple-select-label' id='demo-simple-select'>\r\n          {projects?.map((project) => (\r\n            <Link key={project.id} to={`/dashboard/${project.id}`}>\r\n              <MenuItem value={project.data.name}>{project.data.name}</MenuItem>\r\n            </Link>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectForm;\r\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Project.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\SearchWord.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\ModalBox.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\noty.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\toolsComponents\\LemetizeWord.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\PopoverModule.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\state\\stateProvider.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\state\\reducer.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\state\\actionTypes.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\firebase.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\configs\\ProtectedRoute.js",["143"],"import { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ isAuth: isAuth, component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuth) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to='/' />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\hooks\\useLocalStorage.js",["144"],"import { useEffect, useState } from 'react';\r\n\r\nconst getSavedData = (key, initialdata) => {\r\n  const savedData = JSON.parse(localStorage.getItem(key));\r\n  return savedData ? savedData : initialdata;\r\n};\r\n\r\nexport const useLocalStorage = (key, initialdata) => {\r\n  const [data, setData] = useState(() => {\r\n    return getSavedData(key, initialdata);\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  return [data, setData];\r\n};\r\n","C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\Material-UI\\AccordionModule.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\ErrorPage.js",[],"C:\\Users\\temuri\\Desktop\\NLP\\qartuli-nlp\\src\\components\\helper\\Loading.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":17},{"ruleId":"149","severity":1,"message":"153","line":15,"column":18,"nodeType":"151","messageId":"152","endLine":15,"endColumn":26},{"ruleId":"149","severity":1,"message":"154","line":15,"column":30,"nodeType":"151","messageId":"152","endLine":15,"endColumn":38},{"ruleId":"149","severity":1,"message":"155","line":3,"column":16,"nodeType":"151","messageId":"152","endLine":3,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":73,"column":6,"nodeType":"158","endLine":73,"endColumn":21,"suggestions":"159"},{"ruleId":"149","severity":1,"message":"153","line":16,"column":18,"nodeType":"151","messageId":"152","endLine":16,"endColumn":26},{"ruleId":"149","severity":1,"message":"154","line":16,"column":30,"nodeType":"151","messageId":"152","endLine":16,"endColumn":38},{"ruleId":"149","severity":1,"message":"155","line":3,"column":21,"nodeType":"151","messageId":"152","endLine":3,"endColumn":29},{"ruleId":"149","severity":1,"message":"154","line":24,"column":30,"nodeType":"151","messageId":"152","endLine":24,"endColumn":38},{"ruleId":"156","severity":1,"message":"160","line":63,"column":6,"nodeType":"158","endLine":63,"endColumn":10,"suggestions":"161"},{"ruleId":"145","replacedBy":"162"},{"ruleId":"147","replacedBy":"163"},{"ruleId":"149","severity":1,"message":"164","line":18,"column":12,"nodeType":"151","messageId":"152","endLine":18,"endColumn":16},{"ruleId":"149","severity":1,"message":"154","line":18,"column":30,"nodeType":"151","messageId":"152","endLine":18,"endColumn":38},{"ruleId":"165","severity":1,"message":"166","line":3,"column":27,"nodeType":"167","messageId":"168","endLine":3,"endColumn":41,"fix":"169"},{"ruleId":"156","severity":1,"message":"170","line":15,"column":6,"nodeType":"158","endLine":15,"endColumn":12,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'ErrorPage' is defined but never used.","Identifier","unusedVar","'projects' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'history', 'projects', 'setData', and 'user'. Either include them or remove the dependency array.",["175"],["172"],["173"],"'user' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"176","text":"177"},"React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},[81,95],"isAuth",{"desc":"183","fix":"184"},"Update the dependencies array to be: [dispatch, history, refresh, user]",{"range":"185","text":"186"},"Update the dependencies array to be: [history, id, projects, setData, user]",{"range":"187","text":"188"},"Update the dependencies array to be: [data, key]",{"range":"189","text":"190"},[2075,2090],"[dispatch, history, refresh, user]",[2120,2124],"[history, id, projects, setData, user]",[440,446],"[data, key]"]